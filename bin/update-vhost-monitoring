#!/usr/bin/perl
#
# Generate:
#
# /etc/sudoers.nrpe -- rules allowing the Nagios daemon
# to run vhost monitoring scripts as the vhost user.
#
# /etc/nagios/nrpe.d/vhosts.cfg -- NRPE rules to call monitoring scripts.
#


use strict;
use warnings;

use File::Basename;
use File::Temp qw(tempfile mktemp);
use File::Copy;
use Sys::Hostname;

our ($vhosts, $sites);
require "/data/servers/vhosts.pl";


my $SUDOERS_NRPE="/etc/sudoers.nrpe";
my $NRPE_VHOSTS="/etc/nagios/nrpe.d/vhosts.cfg";

die "must run as root" if($< != 0);


my $tmp_sudoers = mktemp("/tmp/generate-sudoers-nrpe-XXXXXXXX");
open SUDOERS, ">$tmp_sudoers" or die "can't write to $tmp_sudoers: $!";
print SUDOERS "# Generated by $0 at " . `date` . "\n\n";

my $tmp_nrpe = mktemp("/tmp/generate-nrpe-vhosts-XXXXXXXX");
open NRPE, ">$tmp_nrpe" or die "can't write to $tmp_nrpe: $!";
print NRPE "# Generated by $0 at " . `date` . "\n\n";

my $hostname = hostname();
$hostname =~ s/\..*$//;

foreach my $vhost (keys %$vhosts) {
    next if(!grep /^$hostname/, @{$vhosts->{$vhost}{'servers'}});
    next if($vhosts->{$vhost}{'staging'});
    next if(!defined $vhosts->{$vhost}{'monitoring_scripts'});

    my $vhost_dir = "/data/vhost/$vhost";

    my $vhost_conf = $vhosts->{$vhost};
    my $site = $vhost_conf->{'site'};
    my $site_conf = $sites->{$site};
    my $conf;
    foreach my $key ( keys %$site_conf ) { $conf->{$key} = $site_conf->{$key}; }
    foreach my $key ( keys %$vhost_conf ) { $conf->{$key} = $vhost_conf->{$key}; }

    my $vcspath = (exists($conf->{private_git_repository}))? $conf->{private_git_repository} : $conf->{git_repository};

    foreach my $script (@{$conf->{monitoring_scripts}}) {
        my $script_cmd = "$vhost_dir/$vcspath/$script";
        (my $script_path = $script_cmd) =~ s/ .*//;
        my @st = stat $script_path;
        if(!@st) {
            warn "can't stat $script_path -- ignoring";
        } elsif($st[2] & 0002) {
            warn "$script_path is world-writable -- ignoring";
        } elsif(!($st[2] & 0100)) {
            warn "$script_path is not executable -- ignoring";
        } else {
            print SUDOERS "nagios    $hostname = (" . $conf->{user} . ") NOPASSWD: $script_path\n";
            print NRPE "command[vhost_${vhost}_" . basename($script_path) . "]=sudo -u " . $conf->{user} . " $script_cmd\n";
        }
    }
}

close SUDOERS;
close NRPE;

copy($tmp_sudoers, $SUDOERS_NRPE) or die "can't overwrite $SUDOERS_NRPE: $!";
unlink($tmp_sudoers) or warn "can't unlink $tmp_sudoers: $!";

copy($tmp_nrpe, $NRPE_VHOSTS) or die "can't overwrite $NRPE_VHOSTS: $!";
unlink($tmp_nrpe) or warn "can't unlink $tmp_nrpe: $!";

system "/bin/systemctl reload nagios-nrpe-server > /dev/null";
