#!/usr/bin/python2.5

import os
from subprocess import check_call
import sys
import re

cdir = "commonlib"
use_existing = True
if use_existing:
    cdir = cdir + "-new"

commonlib_directories = [ "perllib",
                          "phplib",
                          "pylib",
                          "shlib",
                          "jslib",
                          "rblib",
                          "cpplib" ]

# The repositories might have working trees or not:

directories_to_repostories = {}

for d in commonlib_directories:
    bare_name = d+".git"
    working_name = d
    if os.path.exists(bare_name) and os.path.isdir(bare_name):
        directories_to_repostories[d] = bare_name
        continue
    if os.path.exists(working_name) and os.path.isdir(working_name):
        directories_to_repostories[d] = working_name
        continue
    print "Failed to find the repository for '%s'" % (d,)
    sys.exit(1)

if os.path.exists(cdir):
    print "A commonlib directory already exists."
    sys.exit(2)

original_path = os.path.realpath(".")

def verbose_call( a, shell=False ):
    if str == type(a):
        s = a
    else:
        s = " ".join(a)
    print "=== Running "+" "+s
    check_call( a, shell=shell )

verbose_call( [ "mkdir", cdir ] )
os.chdir(cdir)
verbose_call( [ "git", "init" ] )
# Make sure that there's one commit in the repository:
verbose_call( "echo This is the new mySociety commonlib repository > README.txt", shell=True )
verbose_call( [ "git", "add", "README.txt" ] )
verbose_call( [ "git", "commit", "-m", "A small README.txt for the new commonlib" ] )

for d in commonlib_directories:
    repository = directories_to_repostories[d]
    absolute_repository = os.path.join(original_path,repository)
    remote_name = "original-"+d
    # rtb for "remote-tracking branch"
    rtb = remote_name + "/master"
    verbose_call( [ "git", "remote", "add", "-f", remote_name, absolute_repository ] )
    verbose_call( [ "git", "merge", "-s", "ours", "--no-commit", rtb ] )
    verbose_call( [ "git", "read-tree", "--prefix="+d, "-u", rtb ] )
    verbose_call( [ "git", "commit", "-m", "Merge in '%s' as a subdirectory" % (d,) ] )
    verbose_call( [ "git", "pull", "-s", "subtree", remote_name, "master" ] )

if use_existing:
    pass

