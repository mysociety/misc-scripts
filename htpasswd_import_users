#!/usr/bin/perl -w
#
# htpasswd_import_users:
# Import /etc/passwd users into an htpasswd file.
#
# Sadly this has to run as root (shadow passwords).
#
# Copyright (c) 2004 UK Citizens Online Democracy. All rights reserved.
# Email: chris@mysociety.org; WWW: http://www.mysociety.org/
#

my $rcsid = ''; $rcsid .= '$Id: htpasswd_import_users,v 1.1 2006-01-10 11:52:38 francis Exp $';

use strict;

use Errno;
use File::Spec;
use File::stat;
use IO::File;

die "specify location of htpasswd file as only argument" unless (@ARGV == 1);

my $file = $ARGV[0];

=item create_file_to_replace FILE

Create a file to replace the named FILE. Returns in list context a handle open
on the new file, and its name.

=cut
sub create_file_to_replace ($) {
    my ($name) = @_;

    my $st = stat($name);
    my ($v, $path, $file) = File::Spec->splitpath($name);

    for (my $i = 0; $i < 10; ++$i) {
        my $n = File::Spec->catpath($v, $path, sprintf('.%s.%08x.%08x', $file, int(rand(0xffffffff)), time()));
        my $h = new IO::File($n, O_CREAT | O_EXCL | O_WRONLY, defined($st) ? $st->mode() : 0600);
        last if (!$h and !$!{EEXIST});
        return ($n, $h);
    }
    die $!;
}

my ($h, $newfile);
eval {
    ($newfile, $h) = create_file_to_replace($file);

    my $group_members = (getgrnam("mysociety"))[3];
    foreach my $user (split(/,?\s+/, $group_members)) {
        my ($name, $passwd, $uid, $gid, $q, $c, $gcos) = getpwnam($user);
        $gcos =~ s#,.+##;
        $h->printf("%s:%s\n", $name, $passwd) or die "$!";
    }

    $h->close() or die "$!";
};

if ($@) {
    unlink($newfile) if ($newfile);
    die $@;
} elsif (!rename($newfile, $file)) {
    die $!;
};

exit(0);
