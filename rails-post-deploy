#!/bin/bash
#
# make-rails-symlinks
# For Ruby on Rails, run this in exec_extras in vhosts.pl. It makes symlinks
# from vendor to the server version of rails, and migrates the db to the most
# recent version.
#
# Copyright (c) 2007 UK Citizens Online Democracy. All rights reserved.
# Email: francis@mysociety.org; WWW: http://www.mysociety.org/
#
# $Id: rails-post-deploy,v 1.9 2008-01-23 01:59:23 francis Exp $
#

set -e

MYSOCIETY_DIR=`pwd`

# $1 should be the directory of the rails app
cd $1

# make sure that there is an app directory, so are in a rails app tree
cd app/..

# read config file in for later (STAGING_SITE)
. ../shlib/deployfns
read_conf config/general

# see if rails is frozen or not
if [ -d "rails" ]
then
    LN_PATH=rails
else
    rm -f rails
    ln -s . rails
    LN_PATH=/usr/share/rails
fi

# make symlinks to global rails installation
mkdir -p vendor
cd vendor
for X in actionmailer actionpack activerecord activesupport railties
do
    rm -f $X
    ln -s $LN_PATH/$X $X
done
rm -f actionwebservice

# create initial log files
cd ..
rm -f log
ln -s $MYSOCIETY_DIR/../logs log
cd log
touch development.log fastcgi.crash.log production.log test.log
cd ..

# if not staging, force production (via a hack in config/boot.rb which needs
# applying to your rails app, see foi/config/boot.rb)
if [ "$OPTION_STAGING_SITE" = "0" ]
then
    echo "ENV['RAILS_ENV'] = 'production'" > config/rails_env.rb
elif [[ "$OPTION_DOMAIN" == "testharness."* ]]
then
    echo "ENV['RAILS_ENV'] = 'test'" > config/rails_env.rb
else
    rm -f config/rails_env.rb
fi

# upgrade database
rake db:migrate


